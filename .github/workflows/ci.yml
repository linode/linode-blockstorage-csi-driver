name: Continuous Integration
on:
  workflow_dispatch: null
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: go vet ./...
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
      - run: make build
      - run: go test -cover ./... -coverprofile ./coverage.out
      - run: make elevated-test
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.out
          fail_ci_if_error: true
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: linode/linode-blockstorage-csi-driver
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            linode/linode-blockstorage-csi-driver
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{ github.head_ref || github.ref_name }} ,enable=${{ github.ref != format('refs/heads/{0}', 'main') }}
            type=semver,pattern={{raw}},value=${{ github.ref_name }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: "./Dockerfile"
          tags: |
            ${{steps.meta.outputs.tags}}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            REV=${{ github.ref_name }}
  e2e-tests:
    runs-on: ubuntu-latest
    needs: docker-build
    env:
      GITHUB_TOKEN: ${{ secrets.github_token }}
      LINODE_TOKEN: ${{ secrets.DX_LINODE_TOKEN }}
      TEST_IMAGE_TAG: ${{ github.ref == 'refs/heads/main' && 'latest' || github.head_ref || github.ref_name }}
      LINODE_REGION: us-sea
      LINODE_CONTROL_PLANE_MACHINE_TYPE: g6-standard-2
      LINODE_MACHINE_TYPE: g6-standard-2
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: Install devbox
        uses: jetify-com/devbox-install-action@v0.11.0

      - name: Setup CAPL Management Kind Cluster
        run: devbox run local-deploy

      - name: Setup CAPL Child Cluster For Testing
        run: devbox run remote-cluster-deploy

      - name: Run E2E Tests
        run: devbox run e2e-test

      - name: Cleanup Resources
        if: always()
        run: devbox run cleanup-cluster
