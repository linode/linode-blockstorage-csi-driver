name: Continuous Integration
on:
  workflow_dispatch: null
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Install cryptsetup
        run: |
          sudo apt install libcryptsetup12 libcryptsetup-dev
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: go vet ./...
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
      - run: make build
      - run: go test -cover ./... -coverprofile ./coverage.out
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.out
          fail_ci_if_error: true
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: linode/linode-blockstorage-csi-driver
  e2e-tests:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.github_token }}
      LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
      IMAGE_VERSION: ${{ github.ref == 'refs/heads/main' && 'latest' || format('pr-{0}', github.event.number) || github.ref_name }}
      LINODE_REGION: us-sea
      LINODE_CONTROL_PLANE_MACHINE_TYPE: g6-standard-2
      LINODE_MACHINE_TYPE: g6-standard-2
      WORKER_NODES: ${{ github.ref == 'refs/heads/main' && '3' || '0' }}
      E2E_SELECTOR: ${{ github.ref == 'refs/heads/main' && 'all' || 'quick' }}
    steps:
      - name: Install cryptsetup
        run: |
          sudo apt install libcryptsetup12 libcryptsetup-dev
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
      - name: Install devbox
        uses: jetify-com/devbox-install-action@v0.11.0

      - name: Setup CAPL Management Kind Cluster and CAPL Child Cluster For Testing
        run: devbox run mgmt-and-capl-cluster

      - name: Run E2E Tests
        run: devbox run e2e-test

      - name: Run CSI-Sanity Tests
        run: devbox run csi-sanity-test

      - name: run upstream E2E Tests
        if: github.ref == 'refs/heads/main'
        run: devbox run upstream-e2e-tests

      - name: Cleanup Resources
        if: always()
        run: devbox run cleanup-cluster
